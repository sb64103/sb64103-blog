---
layout: post
title:  "Blog-0-Shell Power"
date:   2021-09-14 03:08:45 -0700
categories: jekyll update
---
<link rel="stylesheet" href="/assets/css/style.css">

<h1>What is a Shell?</h1>
{: .h1-text}

Before I explain what a shell is, let's take a look at the following image and see if we can understand why there is no monitors connected to these servers.

<img src="https://sb64103.github.io/sb64103-blog/assets/img/servers.jpg">

<center style="color:blue">It's because graphics slows us down!</center>
<br>

A shell is a program, which uses command line interface as a way to communicate with various programs running on different machines without the need of graphics (GUI). Shell's are awesome because we can use it to login to many servers and automate daily tasks.



<h1>Commands</h1>
{: .h1-text}

Most shell commands are similar to each other and if you know one very well, most likely you can find the equvialent command in a another shell program.
{: .para-text}

Bash           | Description                     | Powershell    |   
:-------------:| :------------------------------:|:-------------:|
`ls`           | list directory contents         |`Get-ChildItem`|
`pwd`          | tells you where you are         |`Get-Location` |
`echo`         | prints to the terminal          |`Write-Output` |
`touch`        | creates a file                  |`New-Item`     |
`cat`          | gets contents of a file         |`Get-Content`  |
`cd`           | changes directory               |`cd`           |
{: .display}


<h1>Using Functions</h1>
{: .h1-text}

{% highlight html linenos %}

#!/usr/bin/env sh
alias lcd=changeDirectory

function changeDirectory {
    cd $1 ; ls -la
}

{% endhighlight %}

<br>

In shell, we can write a function and apply it to an alias. This is useful when we want to use it more than once. Just like a method in any program, it can be re-used many times. In the example above: when ever we write <code> lcd /path </code>. It will run two commands. First, <strong>cd to /path</strong>, then <strong>ls -l </strong> on that directory.

<h1>My Opinion - Shell and the Future</h1>
{: .h1-text}

As Information Technology demands automation, I think shell programming is a good skill to have. Knowng it can help automate many task that can help save money for many employers. When understanding business requirements, good IT professionals can bridge the gap with a healthy infrastructure.


<h1>Use Case </h1>
{: .h1-text}

Here are some useful scripts that might help an IT Team:

<code> 1. Check all server's status email the team members when the server is down </code> <br>
<code> 2. Create a pipeline build for a software team</code> <br>
<code> 3. Powershell integrates really nicely with Microsoft Excel </code> <br>
<code> 4. Managing remote servers when debugging production </code> <br>
<code> 5. Parsing a file and extracting information validate requirements </code> <br>

